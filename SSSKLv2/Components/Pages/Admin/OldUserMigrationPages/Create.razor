@page "/admin/oldusermigrations/create"
@inject IOldUserMigrationService OldMigrationsService
@using SSSKLv2.Data
@using Microsoft.AspNetCore.Authorization
@using SSSKLv2.Components.Account
@using SSSKLv2.Services.Interfaces
@inject NavigationManager NavigationManager

@attribute [Authorize(Policy = Policies.Admin)]

<PageTitle>SSSKLv2 | Aanmaken</PageTitle>

<h1>Aanmaken migratiegebruiker</h1>

<hr />
<div>
    <a href="/admin/oldusermigrations">Terug naar lijst</a>
</div>
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="OldUserMigration" OnValidSubmit="AddOldUserMigration" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="username" class="form-label">Gebruikersnaam:</label> 
                <InputText id="username" @bind-Value="OldUserMigration.Username" class="form-control" /> 
                <ValidationMessage For="() => OldUserMigration.Username" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="saldo" class="form-label">Saldo:</label> 
                <div class="input-group">
                    <span class="input-group-text">€</span>
                    <InputNumber id="saldo" @bind-Value="OldUserMigration.Saldo" class="form-control" /> 
                </div>
                <ValidationMessage For="() => OldUserMigration.Saldo" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>


@code {

    [SupplyParameterFromForm]
    public OldUserMigration OldUserMigration { get; set; } = new();

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddOldUserMigration()
    {
        await OldMigrationsService.CreateProduct(OldUserMigration);
        NavigationManager.NavigateTo("/admin/oldusermigrations");
    }
}
