@page "/admin/topups/{Page:int?}"
@attribute [Authorize(Policy = Policies.Admin)]
@inject ITopUpService TopUpService
@using SSSKLv2.Data
@using SSSKLv2.Services.Interfaces
@using Microsoft.AspNetCore.Authorization
@using SSSKLv2.Components.Account

<PageTitle>SSSKLv2 | Saldobeheer</PageTitle>

<div class="row crud-form-header">
    <div class="col-10 title-container">
        <h1>Saldobeheer</h1>
    </div>
    <div class="col-2 text-end back-container">
        <a class="btn btn-success bg-lg" href="/admin/topups/create" role="button"><i class="bi bi-plus-circle"></i></a>
    </div>
</div>

<div class="table-responsive">
    <table class="table table-striped">
        <thead>
        <tr>
            <th scope="col">Datum</th>
            <th scope="col">Gebruikersnaam</th>
            <th scope="col">Saldo</th>
            <th scope="col">#</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var topup in TopUps.Value)
        {
            <tr>
                <th>@topup.CreatedOn.ToString("dd/MM/yyyy")</th>
                <td>@topup.User.Name @topup.User.Surname</td>
                <td>+ @topup.Saldo.ToString("C")</td>
                <td>
                    <a class="btn btn-danger btn-sm" href="@($"admin/topups/delete?id={topup.Id}")" role="button"><i class="bi bi-trash"></i></a>
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>

<Pagination
    TotalItems="TopUps.TotalObjects"
    NavUrl="/admin/topups/" />

@code {
    [Parameter]
    public int? Page { get; set; }
    
    public PaginationObject<TopUp> TopUps = new PaginationObject<TopUp>();

    protected override async Task OnInitializedAsync()
    {
        Page ??= 1;
        await GetDataAsync();
    }

    private async Task GetDataAsync()
    {
        TopUps = await TopUpService.GetAllPagination(Page!.Value);
    }
}
