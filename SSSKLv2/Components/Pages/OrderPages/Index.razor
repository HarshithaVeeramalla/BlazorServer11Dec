@page "/orders"
@attribute [Authorize]

@inject IOrderService OrderService
@using SSSKLv2.Data
@using SSSKLv2.Services.Interfaces
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.QuickGrid

<PageTitle>SSSKLv2 | Geschiedenis</PageTitle>

<h1>Bestelgeschiedenis</h1>

<div class="grid">
    <QuickGrid Items="@Orders" Pagination="@pagination">
        <PropertyColumn Title="Datum" Property="@(o => o.CreatedOn)" Format="dd/MM/yyyy" Sortable="true" Align="Align.Left" />
        <PropertyColumn Title="Product" Property="@(o => o.ProductNaam)" Sortable="true" Align="Align.Left" />
        <PropertyColumn Title="Hoeveel" Property="@(o => o.Amount)" Sortable="true" Align="Align.Right" />
        <PropertyColumn Title="Betaald" Property="@(o => o.Paid)" Format="C" Sortable="true" Align="Align.Right" />
        <TemplateColumn Context="order">
            <a class="btn btn-danger btn-sm" href="@($"orders/delete?id={order.Id}")" role="button"><i class="bi bi-trash"></i></a>
        </TemplateColumn>
    </QuickGrid>
</div>

<Paginator State="@pagination" />

@code {


    public PaginationState pagination = new PaginationState() { ItemsPerPage = 15 };
    
    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;
    
    public IQueryable<Order> Orders = default!;

    protected override async Task OnInitializedAsync()
    {
        await GetDataAsync();
    }

    private async Task GetDataAsync()
    {
        var username = HttpContext.User.Identity.Name;
        Orders = await OrderService.GetPersonalQueryable(username);
    }
}
